[{"C:\\Users\\ejohn\\Desktop\\ElevenFiftyProjects\\PawClient\\my-app\\src\\index.tsx":"1","C:\\Users\\ejohn\\Desktop\\ElevenFiftyProjects\\PawClient\\my-app\\src\\reportWebVitals.ts":"2","C:\\Users\\ejohn\\Desktop\\ElevenFiftyProjects\\PawClient\\my-app\\src\\App.tsx":"3","C:\\Users\\ejohn\\Desktop\\ElevenFiftyProjects\\PawClient\\my-app\\src\\components\\Auth\\Navbar.tsx":"4","C:\\Users\\ejohn\\Desktop\\ElevenFiftyProjects\\PawClient\\my-app\\src\\components\\Auth\\Sign.tsx":"5","C:\\Users\\ejohn\\Desktop\\ElevenFiftyProjects\\PawClient\\my-app\\src\\components\\Auth\\Logout.tsx":"6","C:\\Users\\ejohn\\Desktop\\ElevenFiftyProjects\\PawClient\\my-app\\src\\components\\PawPost\\PostIndex.tsx":"7","C:\\Users\\ejohn\\Desktop\\ElevenFiftyProjects\\PawClient\\my-app\\src\\components\\PawPost\\PostCreate.tsx":"8","C:\\Users\\ejohn\\Desktop\\ElevenFiftyProjects\\PawClient\\my-app\\src\\components\\PawPost\\ImagePost.tsx":"9","C:\\Users\\ejohn\\Desktop\\ElevenFiftyProjects\\PawClient\\my-app\\src\\components\\PawPost\\PostEdit.tsx":"10","C:\\Users\\ejohn\\Desktop\\ElevenFiftyProjects\\PawClient\\my-app\\src\\components\\PawPost\\PostCatalog.tsx":"11","C:\\Users\\ejohn\\Desktop\\ElevenFiftyProjects\\PawClient\\my-app\\src\\components\\PawPost\\PostItems.tsx":"12"},{"size":501,"mtime":1611452516548,"results":"13","hashOfConfig":"14"},{"size":425,"mtime":499162500000,"results":"15","hashOfConfig":"14"},{"size":2505,"mtime":1611452637953,"results":"16","hashOfConfig":"14"},{"size":921,"mtime":1610988596737,"results":"17","hashOfConfig":"14"},{"size":5355,"mtime":1611254908492,"results":"18","hashOfConfig":"14"},{"size":1136,"mtime":1610987282088,"results":"19","hashOfConfig":"14"},{"size":3780,"mtime":1611612907525,"results":"20","hashOfConfig":"14"},{"size":7777,"mtime":1611533679861,"results":"21","hashOfConfig":"14"},{"size":3110,"mtime":1611282426870,"results":"22","hashOfConfig":"14"},{"size":8486,"mtime":1611529339227,"results":"23","hashOfConfig":"14"},{"size":2708,"mtime":1611611139508,"results":"24","hashOfConfig":"14"},{"size":1869,"mtime":1611614938393,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"2gptof",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\ejohn\\Desktop\\ElevenFiftyProjects\\PawClient\\my-app\\src\\index.tsx",[],["53","54"],"C:\\Users\\ejohn\\Desktop\\ElevenFiftyProjects\\PawClient\\my-app\\src\\reportWebVitals.ts",[],"C:\\Users\\ejohn\\Desktop\\ElevenFiftyProjects\\PawClient\\my-app\\src\\App.tsx",[],"C:\\Users\\ejohn\\Desktop\\ElevenFiftyProjects\\PawClient\\my-app\\src\\components\\Auth\\Navbar.tsx",["55"],"import { Component } from 'react'\r\nimport Link from '@material-ui/core/Link';\r\n// import Typography from '@material-ui/core/Typography';\r\nimport Logout from './Logout'\r\nimport './NavBar.css'\r\ninterface NavProps {\r\n  clearToken: () => void\r\n}\r\n\r\ntype NavbarComp = {\r\n  Home: string;\r\n  About: string;\r\n  Posts: string;\r\n  Contact: string;\r\n}\r\n// const preventDefault = (event: React.SyntheticEvent) => event.preventDefault();\r\n\r\nclass Navbar extends Component<NavProps, NavbarComp>{\r\n  constructor(props: NavProps) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      Home: \"\",\r\n      About: \"\",\r\n      Posts: \"\",\r\n      Contact: \"\"\r\n\r\n    }\r\n\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"mainNav\">\r\n        <h1 className= \"MainName\">\r\n          Home Bound Paws</h1>\r\n        <nav>\r\n          <Logout clearToken={this.props.clearToken} />\r\n\r\n        </nav>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default Navbar;","C:\\Users\\ejohn\\Desktop\\ElevenFiftyProjects\\PawClient\\my-app\\src\\components\\Auth\\Sign.tsx",[],"C:\\Users\\ejohn\\Desktop\\ElevenFiftyProjects\\PawClient\\my-app\\src\\components\\Auth\\Logout.tsx",[],"C:\\Users\\ejohn\\Desktop\\ElevenFiftyProjects\\PawClient\\my-app\\src\\components\\PawPost\\PostIndex.tsx",["56","57","58"],"C:\\Users\\ejohn\\Desktop\\ElevenFiftyProjects\\PawClient\\my-app\\src\\components\\PawPost\\PostCreate.tsx",["59"],"import React from 'react'\r\nimport Card from '@material-ui/core/Card';\r\nimport Container from '@material-ui/core/Container';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport ImagePost from './ImagePost'\r\n\r\n\r\ninterface PostProps{\r\nupdateUser: (userID: string) => any\r\nfetchHomePosts : any\r\nsessionToken: any\r\n\r\n\r\n}\r\n\r\n\r\n// use sessiontoken to access local storage\r\n\r\ninterface PostState {\r\n    title: string;\r\n    animal: string;\r\n    color: string;\r\n    city: string;\r\n    state: string;\r\n    description: string;\r\n    date: string;\r\n    time: string;\r\n    owner: string;\r\n    \r\n}\r\n\r\n\r\n class PostCreate extends React.Component<PostProps, PostState> {\r\n     constructor(props:PostProps){\r\n         super(props)\r\n\r\n         this.state = {\r\n             title: \"\",\r\n             animal: \"\",\r\n             color: \"\",\r\n             city: \"\",\r\n             state: \"\",\r\n             description: \"\",\r\n             date: \"\",\r\n             time: \"\",\r\n             owner: \"\"\r\n             \r\n\r\n         }\r\n\r\n         \r\n     \r\n         this.handleSubmit = this.handleSubmit.bind(this)\r\n         console.log(\"User info inputed\");\r\n         this.setState({ title: \"\"})\r\n         this.setState({ animal: \"\"})\r\n         this.setState({ color: \"\"})\r\n         this.setState({ city: \"\"})\r\n         this.setState({ state: \"\"})\r\n         this.setState({ description: \"\"})\r\n         this.setState({ date: \"\"})\r\n         this.setState({ time: \"\"})\r\n        \r\n         \r\n        }\r\n        \r\n        // Toggle between user edit for post\r\n\r\n       \r\n\r\n         handleSubmit (e: any) {\r\n          e.preventDefault();\r\n\r\n         let serverLink = 'http://localhost:5000'\r\n        \r\n         const url = `${serverLink}/pawpost/log`\r\n\r\n            let body = {\r\n             pawpost: {\r\n             title: this.state.title,\r\n             animal: this.state.animal,\r\n             color: this.state.color,\r\n             city: this.state.city,\r\n             state: this.state.state,\r\n             description: this.state.description,\r\n             date: this.state.date,\r\n             time: this.state.time,\r\n             owner: this.props.updateUser\r\n           }\r\n         }\r\n\r\n         fetch(url, {\r\n           method: 'POST',\r\n           headers: {\r\n             'Content-Type': 'application/json', \r\n             'Authorization': this.props.sessionToken,\r\n           },\r\n           body: JSON.stringify(body)\r\n         })\r\n         .then(r => r.json())\r\n         .then(rObj => {\r\n           console.log(rObj); \r\n           this.props.fetchHomePosts();\r\n         });   \r\n\r\n        //  Toggle to Edit post\r\n        // const editPostUpdate = (homePosts) =>{\r\n        //   setHomePostsUpdate(homePosts)\r\n        //   console.log(homePosts);\r\n        // }\r\n     }\r\n     \r\n    render() {\r\n        return (\r\n         \r\n            <div>\r\n                <Card className={'mainCard'}>\r\n      <ImagePost sessionToken={this.props.sessionToken} />\r\n        <CardContent>\r\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n            Create PawPost\r\n          </Typography>\r\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n           {/* Text input field goes here */}\r\n          \r\n           <TextField\r\n          variant=\"outlined\"\r\n          margin=\"normal\"\r\n          required\r\n          fullWidth\r\n          id=\"title\"\r\n          label=\"Title\"\r\n          name=\"title\"\r\n          autoComplete=\"title\"\r\n          value={this.state.title}\r\n          onChange={(e) => {\r\n            this.setState({\r\n              title: e.target.value\r\n            })\r\n            console.log(this.state.title);\r\n          }}\r\n          autoFocus\r\n        />\r\n\r\n          <TextField\r\n          variant=\"outlined\"\r\n          margin=\"normal\"\r\n          required\r\n          fullWidth\r\n          id=\"animal\"\r\n          label=\"Animal\"\r\n          name=\"animal\"\r\n          autoComplete=\"animal\"\r\n          value={this.state.animal}\r\n          onChange={(e) => {\r\n            this.setState({\r\n              animal: e.target.value\r\n            })\r\n            console.log(this.state.animal);\r\n          }}\r\n          autoFocus\r\n        />\r\n\r\n          <TextField\r\n          variant=\"outlined\"\r\n          margin=\"normal\"\r\n          required\r\n          fullWidth\r\n          id=\"color\"\r\n          label=\"Color\"\r\n          name=\"color\"\r\n          autoComplete=\"color\"\r\n          value={this.state.color}\r\n          onChange={(e) => {\r\n            this.setState({\r\n              color: e.target.value\r\n            })\r\n            console.log(this.state.color);\r\n          }}\r\n          autoFocus\r\n        />\r\n\r\n          <TextField\r\n          variant=\"outlined\"\r\n          margin=\"normal\"\r\n          required\r\n          fullWidth\r\n          id=\"city\"\r\n          label=\"City\"\r\n          name=\"city\"\r\n          autoComplete=\"city\"\r\n          value={this.state.city}\r\n          onChange={(e) => {\r\n            this.setState({\r\n              city: e.target.value\r\n            })\r\n            console.log(this.state.city);\r\n          }}\r\n          autoFocus\r\n        />\r\n\r\n          <TextField\r\n          variant=\"outlined\"\r\n          margin=\"normal\"\r\n          required\r\n          fullWidth\r\n          id=\"state\"\r\n          label=\"State\"\r\n          name=\"state\"\r\n          autoComplete=\"state\"\r\n          value={this.state.state}\r\n          onChange={(e) => {\r\n            this.setState({\r\n              state: e.target.value\r\n            })\r\n            console.log(this.state.state);\r\n          }}\r\n          autoFocus\r\n        />\r\n\r\n          <TextField\r\n          variant=\"outlined\"\r\n          margin=\"normal\"\r\n          required\r\n          fullWidth\r\n          id=\"description\"\r\n          label=\"Description\"\r\n          name=\"description\"\r\n          autoComplete=\"description\"\r\n          value={this.state.description}\r\n          onChange={(e) => {\r\n            this.setState({\r\n              description: e.target.value\r\n            })\r\n            console.log(this.state.description);\r\n          }}\r\n          autoFocus\r\n        />    \r\n\r\n          <TextField\r\n          variant=\"outlined\"\r\n          margin=\"normal\"\r\n          required\r\n          fullWidth\r\n          id=\"date\"\r\n          label=\"Date\"\r\n          name=\"date\"\r\n          autoComplete=\"date\"\r\n          value={this.state.date}\r\n          onChange={(e) => {\r\n            this.setState({\r\n              date: e.target.value\r\n            })\r\n            console.log(this.state.date);\r\n          }}\r\n          autoFocus\r\n        />    \r\n\r\n          <TextField\r\n          variant=\"outlined\"\r\n          margin=\"normal\"\r\n          required\r\n          fullWidth\r\n          id=\"time\"\r\n          label=\"Time\"\r\n          name=\"time\"\r\n          autoComplete=\"time\"\r\n          value={this.state.time}\r\n          onChange={(e) => {\r\n            this.setState({\r\n              time: e.target.value\r\n            })\r\n            console.log(this.state.time);\r\n          }}\r\n          autoFocus\r\n        />\r\n         <Button\r\n          type=\"button\"\r\n          // onClick={this.handleSubmit}\r\n          fullWidth\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          className=\"editBtn\"\r\n        >\r\n         Edit\r\n        </Button> \r\n       \r\n\r\n          <br />\r\n          <br/>\r\n\r\n          <Button\r\n          type=\"submit\"\r\n          onClick={this.handleSubmit}\r\n          fullWidth\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          className=\"submitPostBtn\"\r\n        >\r\n         Submit\r\n        </Button>\r\n    </Typography>\r\n   </CardContent>\r\n       </Card>\r\n       </div>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\nexport default PostCreate;","C:\\Users\\ejohn\\Desktop\\ElevenFiftyProjects\\PawClient\\my-app\\src\\components\\PawPost\\ImagePost.tsx",[],"C:\\Users\\ejohn\\Desktop\\ElevenFiftyProjects\\PawClient\\my-app\\src\\components\\PawPost\\PostEdit.tsx",["60"],"C:\\Users\\ejohn\\Desktop\\ElevenFiftyProjects\\PawClient\\my-app\\src\\components\\PawPost\\PostCatalog.tsx",["61","62"],"C:\\Users\\ejohn\\Desktop\\ElevenFiftyProjects\\PawClient\\my-app\\src\\components\\PawPost\\PostItems.tsx",[],{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","severity":1,"message":"68","line":2,"column":8,"nodeType":"69","messageId":"70","endLine":2,"endColumn":12},{"ruleId":"67","severity":1,"message":"71","line":5,"column":8,"nodeType":"69","messageId":"70","endLine":5,"endColumn":13},{"ruleId":"67","severity":1,"message":"72","line":8,"column":8,"nodeType":"69","messageId":"70","endLine":8,"endColumn":14},{"ruleId":"67","severity":1,"message":"73","line":11,"column":8,"nodeType":"69","messageId":"70","endLine":11,"endColumn":16},{"ruleId":"67","severity":1,"message":"74","line":3,"column":8,"nodeType":"69","messageId":"70","endLine":3,"endColumn":17},{"ruleId":"67","severity":1,"message":"75","line":9,"column":8,"nodeType":"69","messageId":"70","endLine":9,"endColumn":17},{"ruleId":"67","severity":1,"message":"76","line":3,"column":8,"nodeType":"69","messageId":"70","endLine":3,"endColumn":14},{"ruleId":"67","severity":1,"message":"73","line":4,"column":8,"nodeType":"69","messageId":"70","endLine":4,"endColumn":16},"no-native-reassign",["77"],"no-negated-in-lhs",["78"],"@typescript-eslint/no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'Modal' is defined but never used.","'Popper' is defined but never used.","'PostEdit' is defined but never used.","'Container' is defined but never used.","'ImagePost' is defined but never used.","'Button' is defined but never used.","no-global-assign","no-unsafe-negation"]