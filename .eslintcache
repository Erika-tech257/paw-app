[{"C:\\Users\\ejohn\\Desktop\\ElevenFiftyProjects\\PawClient\\my-app\\src\\index.tsx":"1","C:\\Users\\ejohn\\Desktop\\ElevenFiftyProjects\\PawClient\\my-app\\src\\reportWebVitals.ts":"2","C:\\Users\\ejohn\\Desktop\\ElevenFiftyProjects\\PawClient\\my-app\\src\\App.tsx":"3","C:\\Users\\ejohn\\Desktop\\ElevenFiftyProjects\\PawClient\\my-app\\src\\components\\Auth\\Navbar.tsx":"4","C:\\Users\\ejohn\\Desktop\\ElevenFiftyProjects\\PawClient\\my-app\\src\\components\\Auth\\Sign.tsx":"5","C:\\Users\\ejohn\\Desktop\\ElevenFiftyProjects\\PawClient\\my-app\\src\\components\\Auth\\Logout.tsx":"6","C:\\Users\\ejohn\\Desktop\\ElevenFiftyProjects\\PawClient\\my-app\\src\\components\\PawPost\\PostIndex.tsx":"7","C:\\Users\\ejohn\\Desktop\\ElevenFiftyProjects\\PawClient\\my-app\\src\\components\\PawPost\\PostCreate.tsx":"8","C:\\Users\\ejohn\\Desktop\\ElevenFiftyProjects\\PawClient\\my-app\\src\\components\\PawPost\\ImagePost.tsx":"9","C:\\Users\\ejohn\\Desktop\\ElevenFiftyProjects\\PawClient\\my-app\\src\\components\\PawPost\\PostEdit.tsx":"10","C:\\Users\\ejohn\\Desktop\\ElevenFiftyProjects\\PawClient\\my-app\\src\\components\\PawPost\\PostCatalog.tsx":"11","C:\\Users\\ejohn\\Desktop\\ElevenFiftyProjects\\PawClient\\my-app\\src\\components\\PawPost\\PostItems.tsx":"12","C:\\Users\\ejohn\\Desktop\\ElevenFiftyProjects\\PawClient\\my-app\\src\\components\\Comments\\ComCreate.tsx":"13","C:\\Users\\ejohn\\Desktop\\ElevenFiftyProjects\\PawClient\\my-app\\src\\components\\Comments\\CommentIndex.tsx":"14","C:\\Users\\ejohn\\Desktop\\ElevenFiftyProjects\\PawClient\\my-app\\src\\components\\Comments\\CommentHistory.tsx":"15","C:\\Users\\ejohn\\Desktop\\ElevenFiftyProjects\\PawClient\\my-app\\src\\components\\Auth\\UserProfile.tsx":"16","C:\\Users\\ejohn\\Desktop\\ElevenFiftyProjects\\PawClient\\my-app\\src\\components\\Comments\\CommentEdit.tsx":"17"},{"size":501,"mtime":1611452516548,"results":"18","hashOfConfig":"19"},{"size":425,"mtime":499162500000,"results":"20","hashOfConfig":"19"},{"size":2520,"mtime":1612064633628,"results":"21","hashOfConfig":"19"},{"size":1418,"mtime":1612111581115,"results":"22","hashOfConfig":"19"},{"size":5596,"mtime":1612048264073,"results":"23","hashOfConfig":"19"},{"size":1200,"mtime":1612060892100,"results":"24","hashOfConfig":"19"},{"size":3693,"mtime":1612112378906,"results":"25","hashOfConfig":"19"},{"size":7405,"mtime":1612108066450,"results":"26","hashOfConfig":"19"},{"size":3108,"mtime":1612037149492,"results":"27","hashOfConfig":"19"},{"size":8976,"mtime":1611707937166,"results":"28","hashOfConfig":"19"},{"size":6188,"mtime":1612112375187,"results":"29","hashOfConfig":"19"},{"size":3374,"mtime":1612108417411,"results":"30","hashOfConfig":"19"},{"size":3522,"mtime":1612112007741,"results":"31","hashOfConfig":"19"},{"size":2851,"mtime":1612043929232,"results":"32","hashOfConfig":"19"},{"size":1782,"mtime":1612107537696,"results":"33","hashOfConfig":"19"},{"size":854,"mtime":1612107561250,"results":"34","hashOfConfig":"19"},{"size":2287,"mtime":1612111968276,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"2gptof",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"38"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"38"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\ejohn\\Desktop\\ElevenFiftyProjects\\PawClient\\my-app\\src\\index.tsx",[],["73","74"],"C:\\Users\\ejohn\\Desktop\\ElevenFiftyProjects\\PawClient\\my-app\\src\\reportWebVitals.ts",[],"C:\\Users\\ejohn\\Desktop\\ElevenFiftyProjects\\PawClient\\my-app\\src\\App.tsx",[],"C:\\Users\\ejohn\\Desktop\\ElevenFiftyProjects\\PawClient\\my-app\\src\\components\\Auth\\Navbar.tsx",["75"],"C:\\Users\\ejohn\\Desktop\\ElevenFiftyProjects\\PawClient\\my-app\\src\\components\\Auth\\Sign.tsx",[],"C:\\Users\\ejohn\\Desktop\\ElevenFiftyProjects\\PawClient\\my-app\\src\\components\\Auth\\Logout.tsx",[],"C:\\Users\\ejohn\\Desktop\\ElevenFiftyProjects\\PawClient\\my-app\\src\\components\\PawPost\\PostIndex.tsx",[],"C:\\Users\\ejohn\\Desktop\\ElevenFiftyProjects\\PawClient\\my-app\\src\\components\\PawPost\\PostCreate.tsx",["76"],"import React from 'react'\r\nimport Card from '@material-ui/core/Card';\r\n// import Container from '@material-ui/core/Container';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport PublishIcon from '@material-ui/icons/Publish';\r\nimport ImagePost from './ImagePost'\r\n\r\n\r\ninterface PostProps{\r\nupdateUser: (username: string) => void\r\nfetchHomePosts : any\r\nsessionToken: any\r\n\r\n\r\n}\r\n\r\n\r\n// use sessiontoken to access local storage\r\n\r\ninterface PostState {\r\n    title: string;\r\n    animal: string;\r\n    color: string;\r\n    city: string;\r\n    state: string;\r\n    description: string;\r\n    date: string;\r\n    time: string;\r\n    owner: string;\r\n    \r\n   \r\n    \r\n    \r\n}\r\n\r\n\r\n class PostCreate extends React.Component<PostProps, PostState> {\r\n     constructor(props:PostProps){\r\n         super(props)\r\n\r\n         this.state = {\r\n             title: \"\",\r\n             animal: \"\",\r\n             color: \"\",\r\n             city: \"\",\r\n             state: \"\",\r\n             description: \"\",\r\n             date: \"\",\r\n             time: \"\",\r\n             owner: \"\" \r\n\r\n         }\r\n\r\n         this.handleSubmit = this.handleSubmit.bind(this)\r\n         console.log(\"User info inputed\");\r\n         this.setState({ title: \"\"})\r\n         this.setState({ animal: \"\"})\r\n         this.setState({ color: \"\"})\r\n         this.setState({ city: \"\"})\r\n         this.setState({ state: \"\"})\r\n         this.setState({ description: \"\"})\r\n         this.setState({ date: \"\"})\r\n         this.setState({ time: \"\"})\r\n        }\r\n       \r\n\r\n         handleSubmit = (e: any) => {\r\n          e.preventDefault();\r\n\r\n         let serverLink = 'http://localhost:5000'\r\n        \r\n         const url = `${serverLink}/pawpost/log`\r\n\r\n            let body = {\r\n             pawpost: {\r\n             title: this.state.title,\r\n             animal: this.state.animal,\r\n             color: this.state.color,\r\n             city: this.state.city,\r\n             state: this.state.state,\r\n             description: this.state.description,\r\n             date: this.state.date,\r\n             time: this.state.time,\r\n             owner: this.props.updateUser\r\n           }\r\n           \r\n         }\r\n\r\n         fetch(url, {\r\n           method: 'POST',\r\n           headers: {\r\n             'Content-Type': 'application/json', \r\n             'Authorization': this.props.sessionToken,\r\n           },\r\n           body: JSON.stringify(body)\r\n         })\r\n         .then(r => r.json())\r\n         .then(rObj => {\r\n           console.log(rObj); \r\n           this.props.fetchHomePosts();\r\n         });   \r\n     }\r\n     \r\n    render() {\r\n        return (\r\n         \r\n            <div>\r\n                <Card className={'mainCard'}>\r\n      <ImagePost sessionToken={this.props.sessionToken} />\r\n        <CardContent>\r\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n            Create PawPost\r\n          </Typography>\r\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n           {/* Text input field goes here */}\r\n          \r\n           <TextField\r\n          variant=\"outlined\"\r\n          margin=\"normal\"\r\n          required\r\n          fullWidth\r\n          id=\"title\"\r\n          label=\"Title\"\r\n          name=\"title\"\r\n          autoComplete=\"title\"\r\n          value={this.state.title}\r\n          onChange={(e) => {\r\n            this.setState({\r\n              title: e.target.value\r\n            })\r\n            console.log(this.state.title);\r\n          }}\r\n          autoFocus\r\n        />\r\n\r\n          <TextField\r\n          variant=\"outlined\"\r\n          margin=\"normal\"\r\n          required\r\n          fullWidth\r\n          id=\"animal\"\r\n          label=\"Animal\"\r\n          name=\"animal\"\r\n          autoComplete=\"animal\"\r\n          value={this.state.animal}\r\n          onChange={(e) => {\r\n            this.setState({\r\n              animal: e.target.value\r\n            })\r\n            console.log(this.state.animal);\r\n          }}\r\n          autoFocus\r\n        />\r\n\r\n          <TextField\r\n          variant=\"outlined\"\r\n          margin=\"normal\"\r\n          required\r\n          fullWidth\r\n          id=\"color\"\r\n          label=\"Color\"\r\n          name=\"color\"\r\n          autoComplete=\"color\"\r\n          value={this.state.color}\r\n          onChange={(e) => {\r\n            this.setState({\r\n              color: e.target.value\r\n            })\r\n            console.log(this.state.color);\r\n          }}\r\n          autoFocus\r\n        />\r\n\r\n          <TextField\r\n          variant=\"outlined\"\r\n          margin=\"normal\"\r\n          required\r\n          fullWidth\r\n          id=\"city\"\r\n          label=\"City\"\r\n          name=\"city\"\r\n          autoComplete=\"city\"\r\n          value={this.state.city}\r\n          onChange={(e) => {\r\n            this.setState({\r\n              city: e.target.value\r\n            })\r\n            console.log(this.state.city);\r\n          }}\r\n          autoFocus\r\n        />\r\n\r\n          <TextField\r\n          variant=\"outlined\"\r\n          margin=\"normal\"\r\n          required\r\n          fullWidth\r\n          id=\"state\"\r\n          label=\"State\"\r\n          name=\"state\"\r\n          autoComplete=\"state\"\r\n          value={this.state.state}\r\n          onChange={(e) => {\r\n            this.setState({\r\n              state: e.target.value\r\n            })\r\n            console.log(this.state.state);\r\n          }}\r\n          autoFocus\r\n        />\r\n\r\n          <TextField\r\n          variant=\"outlined\"\r\n          margin=\"normal\"\r\n          required\r\n          fullWidth\r\n          id=\"description\"\r\n          label=\"Description\"\r\n          name=\"description\"\r\n          autoComplete=\"description\"\r\n          value={this.state.description}\r\n          onChange={(e) => {\r\n            this.setState({\r\n              description: e.target.value\r\n            })\r\n            console.log(this.state.description);\r\n          }}\r\n          autoFocus\r\n        />    \r\n\r\n          <TextField\r\n          variant=\"outlined\"\r\n          margin=\"normal\"\r\n          required\r\n          fullWidth\r\n          id=\"date\"\r\n          label=\"Date\"\r\n          name=\"date\"\r\n          autoComplete=\"date\"\r\n          value={this.state.date}\r\n          onChange={(e) => {\r\n            this.setState({\r\n              date: e.target.value\r\n            })\r\n            console.log(this.state.date);\r\n          }}\r\n          autoFocus\r\n        />    \r\n\r\n          <TextField\r\n          variant=\"outlined\"\r\n          margin=\"normal\"\r\n          required\r\n          fullWidth\r\n          id=\"time\"\r\n          label=\"Time\"\r\n          name=\"time\"\r\n          autoComplete=\"time\"\r\n          value={this.state.time}\r\n          onChange={(e) => {\r\n            this.setState({\r\n              time: e.target.value\r\n            })\r\n            console.log(this.state.time);\r\n          }}\r\n          autoFocus\r\n        />\r\n     \r\n\r\n          <Button\r\n          type=\"submit\"\r\n          onClick={this.handleSubmit}\r\n          fullWidth\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          className=\"submitPostBtn\"\r\n          startIcon={<PublishIcon />}\r\n        >\r\n          Submit\r\n          \r\n        </Button>\r\n    </Typography>\r\n   </CardContent>\r\n       </Card>\r\n       </div>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\nexport default PostCreate;","C:\\Users\\ejohn\\Desktop\\ElevenFiftyProjects\\PawClient\\my-app\\src\\components\\PawPost\\ImagePost.tsx",[],"C:\\Users\\ejohn\\Desktop\\ElevenFiftyProjects\\PawClient\\my-app\\src\\components\\PawPost\\PostEdit.tsx",[],"C:\\Users\\ejohn\\Desktop\\ElevenFiftyProjects\\PawClient\\my-app\\src\\components\\PawPost\\PostCatalog.tsx",["77"],"C:\\Users\\ejohn\\Desktop\\ElevenFiftyProjects\\PawClient\\my-app\\src\\components\\PawPost\\PostItems.tsx",[],"C:\\Users\\ejohn\\Desktop\\ElevenFiftyProjects\\PawClient\\my-app\\src\\components\\Comments\\ComCreate.tsx",["78"],"C:\\Users\\ejohn\\Desktop\\ElevenFiftyProjects\\PawClient\\my-app\\src\\components\\Comments\\CommentIndex.tsx",[],"C:\\Users\\ejohn\\Desktop\\ElevenFiftyProjects\\PawClient\\my-app\\src\\components\\Comments\\CommentHistory.tsx",[],"C:\\Users\\ejohn\\Desktop\\ElevenFiftyProjects\\PawClient\\my-app\\src\\components\\Auth\\UserProfile.tsx",["79"],"import React, { Component } from 'react'\r\n\r\n\r\ninterface ProfileProps {\r\n    updateUser: (username: string) => void\r\n\r\n\r\n}\r\n\r\n\r\n\r\nclass UserProfile extends Component<ProfileProps,{}>{\r\n    constructor(props: ProfileProps) {\r\n        super(props)\r\n\r\n    }\r\n\r\n        // let PAW = localStorage.getItem('userID')\r\n        // const fetchDisplayName= async () => {\r\n        //     let res = await fetch(`http://localhost:5000/user/${PAW}`)\r\n        //     let json = await res.json()\r\n        //     console.log(json)\r\n        //     this.setState({displayName:json.user.displayName})\r\n\r\n        // }\r\n            \r\n        \r\n    \r\n   \r\n    \r\n    render() {\r\n        return (\r\n            <div className='UserProfile'>\r\n                <p>{`Welcome:${localStorage.getItem('username')}`}</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default UserProfile ","C:\\Users\\ejohn\\Desktop\\ElevenFiftyProjects\\PawClient\\my-app\\src\\components\\Comments\\CommentEdit.tsx",[],{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","severity":1,"message":"85","line":5,"column":8,"nodeType":"86","messageId":"87","endLine":5,"endColumn":14},{"ruleId":"84","severity":1,"message":"88","line":8,"column":8,"nodeType":"86","messageId":"87","endLine":8,"endColumn":18},{"ruleId":"84","severity":1,"message":"89","line":14,"column":8,"nodeType":"86","messageId":"87","endLine":14,"endColumn":17},{"ruleId":"84","severity":1,"message":"90","line":6,"column":8,"nodeType":"86","messageId":"87","endLine":6,"endColumn":19},{"ruleId":"91","severity":1,"message":"92","line":13,"column":5,"nodeType":"93","messageId":"94","endLine":16,"endColumn":6},"no-native-reassign",["95"],"no-negated-in-lhs",["96"],"@typescript-eslint/no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'CancelIcon' is defined but never used.","'ImagePost' is defined but never used.","'CommentEdit' is defined but never used.","@typescript-eslint/no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-global-assign","no-unsafe-negation"]