[{"C:\\Users\\ejohn\\Desktop\\ElevenFiftyProjects\\PawClient\\my-app\\src\\index.tsx":"1","C:\\Users\\ejohn\\Desktop\\ElevenFiftyProjects\\PawClient\\my-app\\src\\reportWebVitals.ts":"2","C:\\Users\\ejohn\\Desktop\\ElevenFiftyProjects\\PawClient\\my-app\\src\\App.tsx":"3","C:\\Users\\ejohn\\Desktop\\ElevenFiftyProjects\\PawClient\\my-app\\src\\components\\Auth\\Navbar.tsx":"4","C:\\Users\\ejohn\\Desktop\\ElevenFiftyProjects\\PawClient\\my-app\\src\\components\\Auth\\Sign.tsx":"5","C:\\Users\\ejohn\\Desktop\\ElevenFiftyProjects\\PawClient\\my-app\\src\\components\\Auth\\Logout.tsx":"6","C:\\Users\\ejohn\\Desktop\\ElevenFiftyProjects\\PawClient\\my-app\\src\\components\\PawPost\\PostIndex.tsx":"7","C:\\Users\\ejohn\\Desktop\\ElevenFiftyProjects\\PawClient\\my-app\\src\\components\\PawPost\\PostCreate.tsx":"8","C:\\Users\\ejohn\\Desktop\\ElevenFiftyProjects\\PawClient\\my-app\\src\\components\\PawPost\\ImagePost.tsx":"9","C:\\Users\\ejohn\\Desktop\\ElevenFiftyProjects\\PawClient\\my-app\\src\\components\\PawPost\\PostEdit.tsx":"10","C:\\Users\\ejohn\\Desktop\\ElevenFiftyProjects\\PawClient\\my-app\\src\\components\\PawPost\\PostCatalog.tsx":"11","C:\\Users\\ejohn\\Desktop\\ElevenFiftyProjects\\PawClient\\my-app\\src\\components\\PawPost\\PostItems.tsx":"12","C:\\Users\\ejohn\\Desktop\\ElevenFiftyProjects\\PawClient\\my-app\\src\\components\\Comments\\ComCreate.tsx":"13","C:\\Users\\ejohn\\Desktop\\ElevenFiftyProjects\\PawClient\\my-app\\src\\components\\Comments\\CommentIndex.tsx":"14","C:\\Users\\ejohn\\Desktop\\ElevenFiftyProjects\\PawClient\\my-app\\src\\components\\Comments\\CommentHistory.tsx":"15","C:\\Users\\ejohn\\Desktop\\ElevenFiftyProjects\\PawClient\\my-app\\src\\components\\Auth\\UserProfile.tsx":"16","C:\\Users\\ejohn\\Desktop\\ElevenFiftyProjects\\PawClient\\my-app\\src\\components\\Comments\\CommentEdit.tsx":"17","C:\\Users\\ejohn\\Desktop\\ElevenFiftyProjects\\PawClient\\my-app\\src\\environment.tsx":"18"},{"size":501,"mtime":1611452516548,"results":"19","hashOfConfig":"20"},{"size":425,"mtime":499162500000,"results":"21","hashOfConfig":"20"},{"size":2520,"mtime":1612064633628,"results":"22","hashOfConfig":"20"},{"size":1418,"mtime":1612111581115,"results":"23","hashOfConfig":"20"},{"size":6694,"mtime":1612138189557,"results":"24","hashOfConfig":"20"},{"size":1263,"mtime":1612130595457,"results":"25","hashOfConfig":"20"},{"size":3788,"mtime":1612131122176,"results":"26","hashOfConfig":"20"},{"size":7474,"mtime":1612131012234,"results":"27","hashOfConfig":"20"},{"size":3178,"mtime":1612130929946,"results":"28","hashOfConfig":"20"},{"size":9066,"mtime":1612131058169,"results":"29","hashOfConfig":"20"},{"size":6188,"mtime":1612112375187,"results":"30","hashOfConfig":"20"},{"size":3465,"mtime":1612131166847,"results":"31","hashOfConfig":"20"},{"size":3629,"mtime":1612130672317,"results":"32","hashOfConfig":"20"},{"size":2933,"mtime":1612130808632,"results":"33","hashOfConfig":"20"},{"size":1782,"mtime":1612107537696,"results":"34","hashOfConfig":"20"},{"size":854,"mtime":1612107561250,"results":"35","hashOfConfig":"20"},{"size":2287,"mtime":1612111968276,"results":"36","hashOfConfig":"20"},{"size":279,"mtime":1612130385337,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"2gptof",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"40"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"40"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"40"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"40"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"C:\\Users\\ejohn\\Desktop\\ElevenFiftyProjects\\PawClient\\my-app\\src\\index.tsx",[],["79","80"],"C:\\Users\\ejohn\\Desktop\\ElevenFiftyProjects\\PawClient\\my-app\\src\\reportWebVitals.ts",[],"C:\\Users\\ejohn\\Desktop\\ElevenFiftyProjects\\PawClient\\my-app\\src\\App.tsx",[],"C:\\Users\\ejohn\\Desktop\\ElevenFiftyProjects\\PawClient\\my-app\\src\\components\\Auth\\Navbar.tsx",["81"],"import React,{ Component } from 'react'\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport Logout from './Logout'\r\nimport './NavBar.css'\r\n\r\ninterface NavProps {\r\n  clearToken: () => void\r\n}\r\n\r\ntype NavbarComp = {\r\n  Home: string;\r\n  About: string;\r\n  Posts: string;\r\n  Contact: string;\r\n}\r\n// const preventDefault = (event: React.SyntheticEvent) => event.preventDefault();\r\n\r\nclass Navbar extends Component<NavProps, NavbarComp>{\r\n  constructor(props: NavProps) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      Home: \"\",\r\n      About: \"\",\r\n      Posts: \"\",\r\n      Contact: \"\"\r\n\r\n    }\r\n\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"mainNav\">\r\n         <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <IconButton edge=\"start\"  color=\"inherit\" aria-label=\"menu\">\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography className=\"Title\" variant=\"h5\" >\r\n          Home Bound Paws\r\n          </Typography>\r\n         \r\n        </Toolbar>\r\n      </AppBar>\r\n      <div className=\"logBtn\">\r\n      <Logout clearToken={this.props.clearToken} />\r\n     </div>\r\n        \r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default Navbar;","C:\\Users\\ejohn\\Desktop\\ElevenFiftyProjects\\PawClient\\my-app\\src\\components\\Auth\\Sign.tsx",[],"C:\\Users\\ejohn\\Desktop\\ElevenFiftyProjects\\PawClient\\my-app\\src\\components\\Auth\\Logout.tsx",[],"C:\\Users\\ejohn\\Desktop\\ElevenFiftyProjects\\PawClient\\my-app\\src\\components\\PawPost\\PostIndex.tsx",[],"C:\\Users\\ejohn\\Desktop\\ElevenFiftyProjects\\PawClient\\my-app\\src\\components\\PawPost\\PostCreate.tsx",[],"C:\\Users\\ejohn\\Desktop\\ElevenFiftyProjects\\PawClient\\my-app\\src\\components\\PawPost\\ImagePost.tsx",[],"C:\\Users\\ejohn\\Desktop\\ElevenFiftyProjects\\PawClient\\my-app\\src\\components\\PawPost\\PostEdit.tsx",[],"C:\\Users\\ejohn\\Desktop\\ElevenFiftyProjects\\PawClient\\my-app\\src\\components\\PawPost\\PostCatalog.tsx",["82"],"import React from 'react'\r\n// import Grid from '@material-ui/core/Grid';\r\nimport { Grid } from '@material-ui/core';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport PostItems from './PostItems'\r\nimport './PostCatalog.css'\r\nimport CommentHistory from '../Comments/CommentHistory'\r\nimport ImagePost from './ImagePost';\r\n\r\n\r\ndeclare module \"@material-ui/core/styles/createPalette\" {\r\n    interface Palette {\r\n        neutral: Palette['primary'];\r\n    }\r\n    interface PaletteOptions {\r\n        neutral: PaletteOptions['primary'];\r\n    }\r\n}\r\n\r\ninterface CatalogProps {\r\n    updateUser: (username: string) => void\r\n    fetchHomePosts: any;\r\n    sessionToken: any\r\n    homePosts: Array<object>\r\n   \r\n}\r\n\r\ninterface CatalogState {\r\n    postId: string;\r\n    open: boolean;\r\n    username: string;\r\n\r\n}\r\n\r\n\r\n\r\n// PawPost use card and grid \r\n\r\n// homePosts are the post objects that the PostCatalog will map(display) to the page. fetchHomePosts allow us to update the posts if user decides to delete. sessionToken needed for delete endpoint. .map needs a return for every element mapped over in the array\r\n\r\nclass PostCatalog extends React.Component<CatalogProps, CatalogState> {\r\n    constructor(props: CatalogProps) {\r\n        super(props)\r\n\r\n\r\n\r\n        this.state = {\r\n            postId: \"\",\r\n            open: false,\r\n            username: \"\"\r\n        }\r\n\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n    handleOpen = () => {\r\n        this.setState({ open: true });\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({ open: false });\r\n    };\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                <h2 className=\"Catalog\">PawPost History</h2>\r\n                {\r\n                    this.props.homePosts?.map((Obj: any, index: any) => {\r\n                        console.log(Obj)\r\n\r\n                        return (\r\n\r\n                            <div key={Obj.id} onMouseEnter={() => {\r\n                                this.setState({ postId: Obj.id })\r\n                                console.log(Obj.id)\r\n                            }}>\r\n\r\n\r\n                                <Card className='' variant=\"outlined\" >\r\n                                    <CardContent>\r\n                                        <Typography className='' color=\"textSecondary\" gutterBottom>\r\n                                            PawPost {Obj.id}\r\n                                        </Typography>\r\n\r\n\r\n                                        <Typography variant=\"body2\" component=\"p\">\r\n                                            {/* <p>Id:{Obj.id}</p> */}\r\n                                            <p>Title:{Obj.title}</p>\r\n                                            <p>Animal:{Obj.animal}</p>\r\n                                            <p>Color:{Obj.color}</p>\r\n                                            <p>City:{Obj.city}</p>\r\n                                            <p>State:{Obj.state}</p>\r\n                                            <p>Description:{Obj.description}</p>\r\n                                            <p>Date:{Obj.date}</p>\r\n                                            <p>Time:{Obj.time}</p>\r\n                                            <p>Username:{Obj.owner}</p>\r\n                                        </Typography>\r\n\r\n                                        <div>\r\n                                            <PostItems updateUser={this.props.updateUser} ObjId={Obj.id} fetchHomePosts={this.props.fetchHomePosts} sessionToken={this.props.sessionToken} homePosts={this.props.homePosts} />\r\n                                        </div>\r\n                                        <div className=\"CommentDiv\">\r\n                                            {/* <Button variant=\"outlined\" color=\"secondary\" onClick={this.handleOpen}>\r\n                                                    Comments\r\n                                                </Button>\r\n                                             */}\r\n\r\n                                            <Accordion>\r\n                                                <AccordionSummary\r\n                                                    expandIcon={<ExpandMoreIcon />}\r\n                                                    aria-controls=\"panel1a-content\"\r\n                                                    id=\"panel1a-header\"\r\n                                                >\r\n\r\n                                                    <Typography >\r\n                                                        <h4 className=\"CommentTitle\">Comments</h4>\r\n                                                    </Typography>\r\n                                                </AccordionSummary>\r\n\r\n                                                <AccordionDetails>\r\n                                                    <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\r\n                                                        <Grid item xs={12} sm={6} md={4}>\r\n                                                            <Typography >\r\n                                                                <CommentHistory Obj={Obj} updateUser={this.props.updateUser} />\r\n                                                            </Typography>\r\n                                                        </Grid>\r\n                                                    </Grid>\r\n                                                </AccordionDetails>\r\n\r\n\r\n                                            </Accordion>\r\n\r\n                                        </div>\r\n\r\n\r\n\r\n                                    </CardContent>\r\n                                </Card>\r\n\r\n                            </div>\r\n\r\n                        )\r\n                    }\r\n                    )\r\n                }\r\n\r\n\r\n            </div >\r\n        )\r\n\r\n    }\r\n}\r\nexport default PostCatalog","C:\\Users\\ejohn\\Desktop\\ElevenFiftyProjects\\PawClient\\my-app\\src\\components\\PawPost\\PostItems.tsx",[],"C:\\Users\\ejohn\\Desktop\\ElevenFiftyProjects\\PawClient\\my-app\\src\\components\\Comments\\ComCreate.tsx",["83"],"import React, { Component } from 'react'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport { withStyles, Theme } from '@material-ui/core/styles';\r\nimport { cyan } from '@material-ui/core/colors';\r\nimport CommentEdit from './CommentEdit'\r\nimport APIURL from '../../environment'\r\n\r\n\r\n\r\n// ComCreate component located in PostItems\r\n\r\n//Pass props of ObjId=postId to get pawpost user and obj.owner to get who the post belongs to\r\n\r\ninterface CommentProps {\r\n    updateUser: (username: string) => void\r\n    fetchHomePosts: any\r\n    sessionToken: any\r\n    ObjId: string\r\n\r\n}\r\n\r\ninterface CommentState {\r\n    description: string;\r\n    owner: string;\r\n\r\n\r\n}\r\n\r\nconst ColorButton = withStyles((theme: Theme) => ({\r\n    root: {\r\n        color: theme.palette.getContrastText(cyan[500]),\r\n        backgroundColor: cyan[500],\r\n        '&:hover': {\r\n            backgroundColor: cyan[700],\r\n        },\r\n    },\r\n}))(Button);\r\n\r\n\r\nclass ComCreate extends Component<CommentProps, CommentState> {\r\n    constructor(props: CommentProps) {\r\n        super(props)\r\n\r\n\r\n\r\n\r\n        this.state = {\r\n            description: \"\",\r\n            owner: \"\"\r\n\r\n        }\r\n\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n        console.log('comment posted')\r\n        this.setState({ description: \"\" })\r\n\r\n    }\r\n\r\n\r\n    handleSubmit = (e: any) => {\r\n        e.preventDefault();\r\n        let data = {\r\n            comments: {\r\n                description: this.state.description,\r\n                owner: this.props.updateUser\r\n            }\r\n        }\r\n\r\n        // `http://localhost:5000/comments/new/${this.props.ObjId}/comment`\r\n\r\n        fetch(`${APIURL}/comments/new/${this.props.ObjId}/comment`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': this.props.sessionToken,\r\n            },\r\n            body: JSON.stringify(data)\r\n        })\r\n            .then(r => r.json())\r\n            .then(rObj => {\r\n                console.log(rObj);\r\n                this.props.fetchHomePosts();\r\n            })\r\n\r\n    }\r\n    render() {\r\n\r\n        return (\r\n\r\n            <div>\r\n\r\n                <form className=\"commentBox\" noValidate autoComplete=\"off\">\r\n                    <TextField\r\n                        id=\"outlined-textarea\"\r\n                        label=\"Comment\"\r\n                        placeholder=\"Leave a Paw Comment\"\r\n                        multiline\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required fullWidth\r\n                        value={this.state.description}\r\n                        onChange={(e) => {\r\n                            this.setState({\r\n                                description: e.target.value\r\n                            })\r\n                            console.log(this.state.description);\r\n                        }}\r\n                        autoFocus\r\n                    />\r\n\r\n                    <div className=\"mainComment\">\r\n                        <ColorButton\r\n                            type=\"submit\"\r\n                            onClick={this.handleSubmit}\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className=\"{classes.margin}\">\r\n                            Reply\r\n                        </ColorButton>\r\n\r\n                    </div>\r\n                  \r\n                    <br />\r\n\r\n                </form>\r\n                \r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default ComCreate","C:\\Users\\ejohn\\Desktop\\ElevenFiftyProjects\\PawClient\\my-app\\src\\components\\Comments\\CommentIndex.tsx",[],"C:\\Users\\ejohn\\Desktop\\ElevenFiftyProjects\\PawClient\\my-app\\src\\components\\Comments\\CommentHistory.tsx",[],"C:\\Users\\ejohn\\Desktop\\ElevenFiftyProjects\\PawClient\\my-app\\src\\components\\Auth\\UserProfile.tsx",["84"],"import React, { Component } from 'react'\r\n\r\n\r\ninterface ProfileProps {\r\n    updateUser: (username: string) => void\r\n\r\n\r\n}\r\n\r\n\r\n\r\nclass UserProfile extends Component<ProfileProps,{}>{\r\n    constructor(props: ProfileProps) {\r\n        super(props)\r\n\r\n    }\r\n\r\n        // let PAW = localStorage.getItem('userID')\r\n        // const fetchDisplayName= async () => {\r\n        //     let res = await fetch(`http://localhost:5000/user/${PAW}`)\r\n        //     let json = await res.json()\r\n        //     console.log(json)\r\n        //     this.setState({displayName:json.user.displayName})\r\n\r\n        // }\r\n            \r\n        \r\n    \r\n   \r\n    \r\n    render() {\r\n        return (\r\n            <div className='UserProfile'>\r\n                <p>{`Welcome:${localStorage.getItem('username')}`}</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default UserProfile ","C:\\Users\\ejohn\\Desktop\\ElevenFiftyProjects\\PawClient\\my-app\\src\\components\\Comments\\CommentEdit.tsx",[],"C:\\Users\\ejohn\\Desktop\\ElevenFiftyProjects\\PawClient\\my-app\\src\\environment.tsx",[],{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","severity":1,"message":"90","line":5,"column":8,"nodeType":"91","messageId":"92","endLine":5,"endColumn":14},{"ruleId":"89","severity":1,"message":"93","line":14,"column":8,"nodeType":"91","messageId":"92","endLine":14,"endColumn":17},{"ruleId":"89","severity":1,"message":"94","line":6,"column":8,"nodeType":"91","messageId":"92","endLine":6,"endColumn":19},{"ruleId":"95","severity":1,"message":"96","line":13,"column":5,"nodeType":"97","messageId":"98","endLine":16,"endColumn":6},"no-native-reassign",["99"],"no-negated-in-lhs",["100"],"@typescript-eslint/no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'ImagePost' is defined but never used.","'CommentEdit' is defined but never used.","@typescript-eslint/no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-global-assign","no-unsafe-negation"]