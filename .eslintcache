[{"C:\\Users\\ejohn\\Desktop\\ElevenFiftyProjects\\PawClient\\my-app\\src\\index.tsx":"1","C:\\Users\\ejohn\\Desktop\\ElevenFiftyProjects\\PawClient\\my-app\\src\\reportWebVitals.ts":"2","C:\\Users\\ejohn\\Desktop\\ElevenFiftyProjects\\PawClient\\my-app\\src\\App.tsx":"3","C:\\Users\\ejohn\\Desktop\\ElevenFiftyProjects\\PawClient\\my-app\\src\\components\\Auth\\Navbar.tsx":"4","C:\\Users\\ejohn\\Desktop\\ElevenFiftyProjects\\PawClient\\my-app\\src\\components\\Auth\\Sign.tsx":"5","C:\\Users\\ejohn\\Desktop\\ElevenFiftyProjects\\PawClient\\my-app\\src\\components\\Auth\\Logout.tsx":"6","C:\\Users\\ejohn\\Desktop\\ElevenFiftyProjects\\PawClient\\my-app\\src\\components\\PawPost\\PostIndex.tsx":"7","C:\\Users\\ejohn\\Desktop\\ElevenFiftyProjects\\PawClient\\my-app\\src\\components\\PawPost\\PostCreate.tsx":"8","C:\\Users\\ejohn\\Desktop\\ElevenFiftyProjects\\PawClient\\my-app\\src\\components\\PawPost\\ImagePost.tsx":"9","C:\\Users\\ejohn\\Desktop\\ElevenFiftyProjects\\PawClient\\my-app\\src\\components\\PawPost\\PostEdit.tsx":"10","C:\\Users\\ejohn\\Desktop\\ElevenFiftyProjects\\PawClient\\my-app\\src\\components\\PawPost\\PostCatalog.tsx":"11","C:\\Users\\ejohn\\Desktop\\ElevenFiftyProjects\\PawClient\\my-app\\src\\components\\PawPost\\PostItems.tsx":"12","C:\\Users\\ejohn\\Desktop\\ElevenFiftyProjects\\PawClient\\my-app\\src\\components\\Comments\\ComCreate.tsx":"13","C:\\Users\\ejohn\\Desktop\\ElevenFiftyProjects\\PawClient\\my-app\\src\\components\\Comments\\CommentIndex.tsx":"14","C:\\Users\\ejohn\\Desktop\\ElevenFiftyProjects\\PawClient\\my-app\\src\\components\\Comments\\CommentHistory.tsx":"15","C:\\Users\\ejohn\\Desktop\\ElevenFiftyProjects\\PawClient\\my-app\\src\\components\\Auth\\UserProfile.tsx":"16","C:\\Users\\ejohn\\Desktop\\ElevenFiftyProjects\\PawClient\\my-app\\src\\components\\Comments\\CommentEdit.tsx":"17","C:\\Users\\ejohn\\Desktop\\ElevenFiftyProjects\\PawClient\\my-app\\src\\environment.tsx":"18","C:\\Users\\ejohn\\Desktop\\ElevenFiftyProjects\\PawClient\\my-app\\src\\components\\Auth\\News.tsx":"19"},{"size":501,"mtime":1611452516548,"results":"20","hashOfConfig":"21"},{"size":425,"mtime":499162500000,"results":"22","hashOfConfig":"21"},{"size":2583,"mtime":1612236430888,"results":"23","hashOfConfig":"21"},{"size":1677,"mtime":1612243198988,"results":"24","hashOfConfig":"21"},{"size":6748,"mtime":1612244965310,"results":"25","hashOfConfig":"21"},{"size":1263,"mtime":1612130595457,"results":"26","hashOfConfig":"21"},{"size":5315,"mtime":1612241957840,"results":"27","hashOfConfig":"21"},{"size":7377,"mtime":1612225639271,"results":"28","hashOfConfig":"21"},{"size":3419,"mtime":1612323573650,"results":"29","hashOfConfig":"21"},{"size":9066,"mtime":1612131058169,"results":"30","hashOfConfig":"21"},{"size":6426,"mtime":1612240423597,"results":"31","hashOfConfig":"21"},{"size":3465,"mtime":1612310169130,"results":"32","hashOfConfig":"21"},{"size":3629,"mtime":1612130672317,"results":"33","hashOfConfig":"21"},{"size":2933,"mtime":1612130808632,"results":"34","hashOfConfig":"21"},{"size":1947,"mtime":1612218225622,"results":"35","hashOfConfig":"21"},{"size":880,"mtime":1612146113059,"results":"36","hashOfConfig":"21"},{"size":2287,"mtime":1612111968276,"results":"37","hashOfConfig":"21"},{"size":279,"mtime":1612130385337,"results":"38","hashOfConfig":"21"},{"size":5227,"mtime":1612242626414,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"2gptof",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"42"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"42"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"42"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"42"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"42"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"C:\\Users\\ejohn\\Desktop\\ElevenFiftyProjects\\PawClient\\my-app\\src\\index.tsx",[],["85","86"],"C:\\Users\\ejohn\\Desktop\\ElevenFiftyProjects\\PawClient\\my-app\\src\\reportWebVitals.ts",[],"C:\\Users\\ejohn\\Desktop\\ElevenFiftyProjects\\PawClient\\my-app\\src\\App.tsx",["87","88"],"import React from 'react';\nimport './App.css';\nimport Navbar from './components/Auth/Navbar';\nimport Sign from './components/Auth/Sign'\nimport PostIndex from './components/PawPost/PostIndex'\nimport UserProfile from './components/Auth/UserProfile'\nimport { Container } from '@material-ui/core';\nimport Typography from '@material-ui/core/Typography';\n\n\n// App is top level component\n\ninterface AppProps {\n\n}\n\ntype AppState = {\n  SessionToken: any\n  CurrentUser: any\n\n\n\n}\nclass App extends React.Component<AppProps, AppState>{\n\n  constructor(props: AppProps) {\n    super(props);\n\n    this.state = {\n      SessionToken: undefined,\n      CurrentUser: undefined\n    }\n  }\n\n  // ****Error will occur if empty array is not implemented and application won't start will exceed maximum limit/took screenshot*****\n\n  componentWillMount() {\n    const token = localStorage.getItem('token')\n    if (token) {\n      this.setState({ SessionToken: token })\n    }\n  } //[] empty array should be there to allow code to run continuously....\n\n  componentDidMount() {\n    const currentID = localStorage.getItem('userID');\n    if (currentID) {\n      this.setState({ CurrentUser: currentID });\n    }\n  }\n  // User stays logged in if page refeshes or leaves page\n  updateToken = (newToken: string) => {\n    this.setState({ SessionToken: newToken });\n    localStorage.setItem('token', newToken);\n    console.log(newToken);\n\n  }\n\n  updateUser = (username: string) => {\n    this.setState({ CurrentUser: username })\n    localStorage.setItem('username', username);\n    console.log(username);\n\n    // UserID logs undefined in the console must be attached to token to register user id ?\n\n  }\n\n  // We are resetting the state of our sessionToken to an empty string, and then we are also clearing our token from our local storage. This will determine if a user is logged in, based on whether or not sessionToken exists in their local storage.\n  clearToken = () => {\n    this.setState({ SessionToken: undefined })\n    this.setState({ CurrentUser: undefined })\n    localStorage.clear()\n\n  }\n\n  render() {\n    return (\n      <div className=\"App\" >\n        {!this.state.SessionToken ? <Sign updateToken={this.updateToken} updateUser={this.updateUser} /> : <div>\n          <Navbar clearToken={this.clearToken} />\n          <UserProfile updateUser={this.updateUser} />\n          <PostIndex updateUser={this.updateUser} sessionToken={this.state.SessionToken} />\n        </div>}\n     \n          <footer> <small > Copyright &copy; Home Bound Paws 2021</small> </footer>\n          \n      </div>\n\n    )\n\n  }\n}\nexport default App;\n","C:\\Users\\ejohn\\Desktop\\ElevenFiftyProjects\\PawClient\\my-app\\src\\components\\Auth\\Navbar.tsx",["89"],"import React, { Component } from 'react'\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Box from '@material-ui/core/Box';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport Logout from './Logout'\r\nimport './NavBar.css'\r\nimport News from '../Auth/News'\r\nimport { Container } from '@material-ui/core';\r\n\r\n\r\n\r\n\r\n\r\ninterface NavProps {\r\n  clearToken: () => void\r\n}\r\n\r\ntype NavbarComp = {\r\n  Home: string;\r\n  About: string;\r\n  Posts: string;\r\n  Contact: string;\r\n}\r\n// const preventDefault = (event: React.SyntheticEvent) => event.preventDefault();\r\n\r\nclass Navbar extends Component<NavProps, NavbarComp>{\r\n  constructor(props: NavProps) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      Home: \"\",\r\n      About: \"\",\r\n      Posts: \"\",\r\n      Contact: \"\"\r\n\r\n    }\r\n\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"mainNav\">\r\n        <AppBar position=\"static\" color=\"primary\">\r\n          <Toolbar>\r\n            <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\">\r\n              <MenuIcon />\r\n            </IconButton>\r\n            <Typography className=\"Title\" variant=\"h5\" >\r\n              Home Bound Paws\r\n          </Typography>\r\n\r\n          </Toolbar>\r\n        </AppBar>\r\n        <div className=\"logBtn\">\r\n          <Logout clearToken={this.props.clearToken} />\r\n        </div>\r\n        <Box\r\n          position=\"relative\"\r\n          top=\"20px\"\r\n          width=\"500px\"\r\n          left=\"100px\">\r\n          <News />\r\n        </Box>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default Navbar;","C:\\Users\\ejohn\\Desktop\\ElevenFiftyProjects\\PawClient\\my-app\\src\\components\\Auth\\Sign.tsx",[],"C:\\Users\\ejohn\\Desktop\\ElevenFiftyProjects\\PawClient\\my-app\\src\\components\\Auth\\Logout.tsx",[],"C:\\Users\\ejohn\\Desktop\\ElevenFiftyProjects\\PawClient\\my-app\\src\\components\\PawPost\\PostIndex.tsx",["90","91"],"import React, { Component } from 'react'\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport Button from '@material-ui/core/Button';\r\nimport { withStyles, Theme } from '@material-ui/core/styles';\r\nimport { cyan } from '@material-ui/core/colors';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport Container from '@material-ui/core/Container';\r\nimport PostCreate from './PostCreate';\r\nimport PostCatalog from './PostCatalog';\r\nimport APIURL from '../../environment'\r\nimport { Divider } from '@material-ui/core';\r\n\r\n\r\n\r\n// Displays all posts\r\n\r\ninterface IndexProps {\r\n    updateUser: (username: string) => void\r\n    sessionToken: any\r\n\r\n}\r\n\r\ninterface IState {\r\n    homePosts: ([]),\r\n    open: boolean\r\n    setHomePosts: (e: any) => void\r\n    comments: ([])\r\n\r\n}\r\n\r\nconst ColorButton = withStyles((theme: Theme) => ({\r\n    root: {\r\n        color: theme.palette.getContrastText(cyan[500]),\r\n        backgroundColor: cyan[500],\r\n        '&:hover': {\r\n            backgroundColor: cyan[700],\r\n        },\r\n    },\r\n}))(Button);\r\n\r\n\r\nclass PostIndex extends Component<IndexProps, IState> {\r\n    constructor(props: IndexProps) {\r\n        super(props)\r\n\r\n\r\n        this.state = {\r\n            homePosts: ([]),\r\n            open: false,\r\n            setHomePosts: (e) =>\r\n                this.setState({\r\n                    homePosts: e\r\n                }),\r\n            comments: ([])\r\n\r\n        }\r\n\r\n\r\n        // this.setState({homePosts: [] })\r\n        // this.setState({ Posts: false})\r\n        this.setState({ open: false })\r\n    }\r\n\r\n    // PostToggle = () => {\r\n    //     this.setState({ Posts: this.state.Posts })\r\n    // }\r\n    HomePostSet = (logdata: any) => {\r\n        this.setState({\r\n            homePosts: logdata\r\n        })\r\n    }\r\n\r\n    // 'http://localhost:5000/pawpost/allLogs'\r\n\r\n    fetchHomePosts = () => {\r\n        fetch(`${APIURL}/pawpost/allLogs`, {\r\n            method: 'GET',\r\n            headers: ({\r\n                'Content-Type': 'application/json',\r\n            })\r\n        }).then((res) => res.json())\r\n            .then((logdata) => {\r\n                //     this.setState({\r\n                //         homePosts: logdata\r\n                //     })\r\n                this.state.setHomePosts(logdata)\r\n                console.log(logdata)\r\n                this.fetchComments();\r\n            }).catch(err => console.log(err))\r\n        // console.log(this.fetchHomePosts);\r\n\r\n    }\r\n\r\n    fetchComments = () => {\r\n        fetch(`${APIURL}/comments/all`, {\r\n            method: 'GET',\r\n            headers: ({\r\n                'Content-Type': 'application/json',\r\n\r\n            })\r\n        }).then((res) => res.json())\r\n            .then((data) => {\r\n                this.setState({ comments: data })\r\n                console.log(this.state.comments)\r\n            })\r\n    }\r\n\r\n\r\n\r\n    // Figure out componentdidmount code console should return an empty array or an array to show posts current user created\r\n    // componentDidMount do not put inside fetch function but above render function\r\n    componentDidMount = () => {\r\n        this.fetchHomePosts()\r\n    }\r\n\r\n\r\n    handleOpen = () => {\r\n        this.setState({ open: true });\r\n    }\r\n    handleClose = () => {\r\n        this.setState({ open: false });\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"PostIndex\">\r\n\r\n                <Button variant=\"outlined\" color=\"primary\" onClick={this.handleOpen}>\r\n                    <p className=\"Create\">Create PawPost</p>\r\n                </Button>\r\n\r\n\r\n                <Dialog\r\n                    open={this.state.open}\r\n                    onClose={this.handleClose}\r\n                    aria-labelledby=\"responsive-dialog-title\">\r\n                    <Container maxWidth=\"sm\">\r\n                        <PostCreate updateUser={this.props.updateUser} fetchHomePosts={this.fetchHomePosts} sessionToken={this.props.sessionToken} />\r\n                        <br />\r\n                        <DialogActions>\r\n                            <Button onClick={this.handleClose} color=\"primary\">\r\n                                Close\r\n                             </Button>\r\n                        </DialogActions>\r\n                    </Container>\r\n                </Dialog>\r\n                <br />\r\n                <br />\r\n                <Grid container justify=\"center\">\r\n\r\n                {/* <Grid item xs={12} sm={6} md={4}> */}\r\n                    <Grid container spacing={2} >\r\n                        {/* <Grid item xs={12} sm={4}> */}\r\n                        <Box bgcolor=\"\" color=\"primary.contrastText\" p={0}\r\n                           position=\"relative\"\r\n                            left=\"0px\"\r\n                            width=\"500px\"\r\n                             >\r\n                            <PostCatalog comments={this.state.comments} updateUser={this.props.updateUser} fetchHomePosts={this.fetchHomePosts} sessionToken={this.props.sessionToken} homePosts={this.state.homePosts} />\r\n                        </Box>\r\n                        {/* </Grid> */}\r\n                    </Grid>\r\n                </Grid>\r\n               <div>\r\n           \r\n               </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\nexport default PostIndex;\r\n\r\n\r\n\r\n","C:\\Users\\ejohn\\Desktop\\ElevenFiftyProjects\\PawClient\\my-app\\src\\components\\PawPost\\PostCreate.tsx",[],"C:\\Users\\ejohn\\Desktop\\ElevenFiftyProjects\\PawClient\\my-app\\src\\components\\PawPost\\ImagePost.tsx",[],"C:\\Users\\ejohn\\Desktop\\ElevenFiftyProjects\\PawClient\\my-app\\src\\components\\PawPost\\PostEdit.tsx",[],"C:\\Users\\ejohn\\Desktop\\ElevenFiftyProjects\\PawClient\\my-app\\src\\components\\PawPost\\PostCatalog.tsx",["92","93"],"import React from 'react'\r\n// import Grid from '@material-ui/core/Grid';\r\nimport { Grid } from '@material-ui/core';\r\nimport Box from '@material-ui/core/Box';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport PostItems from './PostItems'\r\nimport './PostCatalog.css'\r\nimport CommentHistory from '../Comments/CommentHistory'\r\nimport ImagePost from './ImagePost';\r\n\r\n\r\n\r\n\r\ndeclare module \"@material-ui/core/styles/createPalette\" {\r\n    interface Palette {\r\n        neutral: Palette['primary'];\r\n    }\r\n    interface PaletteOptions {\r\n        neutral: PaletteOptions['primary'];\r\n    }\r\n}\r\n\r\ninterface CatalogProps {\r\n    updateUser: (username: string) => void\r\n    fetchHomePosts: any;\r\n    sessionToken: any\r\n    homePosts: Array<object>\r\n    comments: Array<object>\r\n\r\n}\r\n\r\ninterface CatalogState {\r\n    postId: string;\r\n    open: boolean;\r\n    username: string;\r\n\r\n}\r\n\r\n\r\n\r\n// PawPost use card and grid \r\n\r\n// homePosts are the post objects that the PostCatalog will map(display) to the page. fetchHomePosts allow us to update the posts if user decides to delete. sessionToken needed for delete endpoint. .map needs a return for every element mapped over in the array\r\n\r\nclass PostCatalog extends React.Component<CatalogProps, CatalogState> {\r\n    constructor(props: CatalogProps) {\r\n        super(props)\r\n\r\n\r\n\r\n        this.state = {\r\n            postId: \"\",\r\n            open: false,\r\n            username: \"\"\r\n        }\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n    handleOpen = () => {\r\n        this.setState({ open: true });\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({ open: false });\r\n    };\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                <h2 className=\"Catalog\">PawPosts</h2>\r\n                {\r\n                    this.props.homePosts?.map((Obj: any, index: any) => {\r\n                        console.log(Obj)\r\n\r\n                        return (\r\n\r\n                            <div key={Obj.id} onMouseEnter={() => {\r\n                                this.setState({ postId: Obj.id })\r\n                                console.log(Obj.id)\r\n                            }}>\r\n\r\n\r\n                                <Card className='' variant=\"outlined\" >\r\n\r\n                                    <CardContent>\r\n                                        <Typography className='' color=\"textSecondary\" gutterBottom>\r\n                                            PawPost {Obj.id}\r\n                                        </Typography>\r\n\r\n\r\n                                        <ImagePost sessionToken={this.props.sessionToken} />\r\n\r\n\r\n                                        <Typography variant=\"body2\" component=\"p\">\r\n                                            {/* <p>Id:{Obj.id}</p> */}\r\n                                            <p>Title:{Obj.title}</p>\r\n                                            <p>Animal:{Obj.animal}</p>\r\n                                            <p>Color:{Obj.color}</p>\r\n                                            <p>City:{Obj.city}</p>\r\n                                            <p>State:{Obj.state}</p>\r\n                                            <p>Description:{Obj.description}</p>\r\n                                            <p>Date:{Obj.date}</p>\r\n                                            <p>Time:{Obj.time}</p>\r\n                                            <p>Username:{Obj.newPost.username}</p>\r\n                                        </Typography>\r\n\r\n                                        <div>\r\n                                            <PostItems updateUser={this.props.updateUser} ObjId={Obj.id} fetchHomePosts={this.props.fetchHomePosts} sessionToken={this.props.sessionToken} homePosts={this.props.homePosts} />\r\n                                        </div>\r\n                                        <div className=\"CommentDiv\">\r\n                                            {/* <Button variant=\"outlined\" color=\"secondary\" onClick={this.handleOpen}>\r\n                                                    Comments\r\n                                                </Button>\r\n                                             */}\r\n\r\n                                            <Accordion>\r\n                                                <AccordionSummary\r\n                                                    expandIcon={<ExpandMoreIcon />}\r\n                                                    aria-controls=\"panel1a-content\"\r\n                                                    id=\"panel1a-header\"\r\n                                                >\r\n\r\n                                                    <Typography >\r\n                                                        <h4 className=\"CommentTitle\">Comments</h4>\r\n                                                    </Typography>\r\n                                                </AccordionSummary>\r\n\r\n                                                <AccordionDetails>\r\n                                                    <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\r\n                                                        <Grid item xs={12} sm={6} md={4}>\r\n                                                            <Typography >\r\n                                                                <CommentHistory Obj={Obj} comments={this.props.comments} updateUser={this.props.updateUser} />\r\n                                                            </Typography>\r\n                                                        </Grid>\r\n                                                    </Grid>\r\n                                                </AccordionDetails>\r\n                                            </Accordion>\r\n                                        </div>\r\n                               </CardContent>\r\n                                </Card>\r\n                            </div>\r\n\r\n                        )\r\n                    }\r\n                    )\r\n                }\r\n\r\n            </div >\r\n        )\r\n\r\n    }\r\n}\r\nexport default PostCatalog","C:\\Users\\ejohn\\Desktop\\ElevenFiftyProjects\\PawClient\\my-app\\src\\components\\PawPost\\PostItems.tsx",[],"C:\\Users\\ejohn\\Desktop\\ElevenFiftyProjects\\PawClient\\my-app\\src\\components\\Comments\\ComCreate.tsx",["94"],"import React, { Component } from 'react'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport { withStyles, Theme } from '@material-ui/core/styles';\r\nimport { cyan } from '@material-ui/core/colors';\r\nimport CommentEdit from './CommentEdit'\r\nimport APIURL from '../../environment'\r\n\r\n\r\n\r\n// ComCreate component located in PostItems\r\n\r\n//Pass props of ObjId=postId to get pawpost user and obj.owner to get who the post belongs to\r\n\r\ninterface CommentProps {\r\n    updateUser: (username: string) => void\r\n    fetchHomePosts: any\r\n    sessionToken: any\r\n    ObjId: string\r\n\r\n}\r\n\r\ninterface CommentState {\r\n    description: string;\r\n    owner: string;\r\n\r\n\r\n}\r\n\r\nconst ColorButton = withStyles((theme: Theme) => ({\r\n    root: {\r\n        color: theme.palette.getContrastText(cyan[500]),\r\n        backgroundColor: cyan[500],\r\n        '&:hover': {\r\n            backgroundColor: cyan[700],\r\n        },\r\n    },\r\n}))(Button);\r\n\r\n\r\nclass ComCreate extends Component<CommentProps, CommentState> {\r\n    constructor(props: CommentProps) {\r\n        super(props)\r\n\r\n\r\n\r\n\r\n        this.state = {\r\n            description: \"\",\r\n            owner: \"\"\r\n\r\n        }\r\n\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n        console.log('comment posted')\r\n        this.setState({ description: \"\" })\r\n\r\n    }\r\n\r\n\r\n    handleSubmit = (e: any) => {\r\n        e.preventDefault();\r\n        let data = {\r\n            comments: {\r\n                description: this.state.description,\r\n                owner: this.props.updateUser\r\n            }\r\n        }\r\n\r\n        // `http://localhost:5000/comments/new/${this.props.ObjId}/comment`\r\n\r\n        fetch(`${APIURL}/comments/new/${this.props.ObjId}/comment`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': this.props.sessionToken,\r\n            },\r\n            body: JSON.stringify(data)\r\n        })\r\n            .then(r => r.json())\r\n            .then(rObj => {\r\n                console.log(rObj);\r\n                this.props.fetchHomePosts();\r\n            })\r\n\r\n    }\r\n    render() {\r\n\r\n        return (\r\n\r\n            <div>\r\n\r\n                <form className=\"commentBox\" noValidate autoComplete=\"off\">\r\n                    <TextField\r\n                        id=\"outlined-textarea\"\r\n                        label=\"Comment\"\r\n                        placeholder=\"Leave a Paw Comment\"\r\n                        multiline\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required fullWidth\r\n                        value={this.state.description}\r\n                        onChange={(e) => {\r\n                            this.setState({\r\n                                description: e.target.value\r\n                            })\r\n                            console.log(this.state.description);\r\n                        }}\r\n                        autoFocus\r\n                    />\r\n\r\n                    <div className=\"mainComment\">\r\n                        <ColorButton\r\n                            type=\"submit\"\r\n                            onClick={this.handleSubmit}\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className=\"{classes.margin}\">\r\n                            Reply\r\n                        </ColorButton>\r\n\r\n                    </div>\r\n                  \r\n                    <br />\r\n\r\n                </form>\r\n                \r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default ComCreate","C:\\Users\\ejohn\\Desktop\\ElevenFiftyProjects\\PawClient\\my-app\\src\\components\\Comments\\CommentIndex.tsx",[],"C:\\Users\\ejohn\\Desktop\\ElevenFiftyProjects\\PawClient\\my-app\\src\\components\\Comments\\CommentHistory.tsx",[],"C:\\Users\\ejohn\\Desktop\\ElevenFiftyProjects\\PawClient\\my-app\\src\\components\\Auth\\UserProfile.tsx",["95"],"import React, { Component } from 'react'\r\nimport './UserProfile.css'\r\n\r\ninterface ProfileProps {\r\n    updateUser: (username: string) => void\r\n\r\n\r\n}\r\n\r\n\r\n\r\nclass UserProfile extends Component<ProfileProps,{}>{\r\n    constructor(props: ProfileProps) {\r\n        super(props)\r\n\r\n    }\r\n\r\n        // let PAW = localStorage.getItem('userID')\r\n        // const fetchDisplayName= async () => {\r\n        //     let res = await fetch(`http://localhost:5000/user/${PAW}`)\r\n        //     let json = await res.json()\r\n        //     console.log(json)\r\n        //     this.setState({displayName:json.user.displayName})\r\n\r\n        // }\r\n            \r\n        \r\n    \r\n   \r\n    \r\n    render() {\r\n        return (\r\n            <div className='UserProfile'>\r\n                <p>{`Welcome:${localStorage.getItem('username')}`}</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default UserProfile ","C:\\Users\\ejohn\\Desktop\\ElevenFiftyProjects\\PawClient\\my-app\\src\\components\\Comments\\CommentEdit.tsx",[],"C:\\Users\\ejohn\\Desktop\\ElevenFiftyProjects\\PawClient\\my-app\\src\\environment.tsx",[],"C:\\Users\\ejohn\\Desktop\\ElevenFiftyProjects\\PawClient\\my-app\\src\\components\\Auth\\News.tsx",[],{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","severity":1,"message":"101","line":7,"column":10,"nodeType":"102","messageId":"103","endLine":7,"endColumn":19},{"ruleId":"100","severity":1,"message":"104","line":8,"column":8,"nodeType":"102","messageId":"103","endLine":8,"endColumn":18},{"ruleId":"100","severity":1,"message":"101","line":11,"column":10,"nodeType":"102","messageId":"103","endLine":11,"endColumn":19},{"ruleId":"100","severity":1,"message":"105","line":13,"column":10,"nodeType":"102","messageId":"103","endLine":13,"endColumn":17},{"ruleId":"100","severity":1,"message":"106","line":33,"column":7,"nodeType":"102","messageId":"103","endLine":33,"endColumn":18},{"ruleId":"100","severity":1,"message":"107","line":4,"column":8,"nodeType":"102","messageId":"103","endLine":4,"endColumn":11},{"ruleId":"100","severity":1,"message":"108","line":6,"column":8,"nodeType":"102","messageId":"103","endLine":6,"endColumn":17},{"ruleId":"100","severity":1,"message":"109","line":6,"column":8,"nodeType":"102","messageId":"103","endLine":6,"endColumn":19},{"ruleId":"110","severity":1,"message":"111","line":13,"column":5,"nodeType":"112","messageId":"113","endLine":16,"endColumn":6},"no-native-reassign",["114"],"no-negated-in-lhs",["115"],"@typescript-eslint/no-unused-vars","'Container' is defined but never used.","Identifier","unusedVar","'Typography' is defined but never used.","'Divider' is defined but never used.","'ColorButton' is assigned a value but never used.","'Box' is defined but never used.","'CardMedia' is defined but never used.","'CommentEdit' is defined but never used.","@typescript-eslint/no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-global-assign","no-unsafe-negation"]