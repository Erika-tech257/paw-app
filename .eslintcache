[{"C:\\Users\\ejohn\\Desktop\\ElevenFiftyProjects\\PawClient\\my-app\\src\\index.tsx":"1","C:\\Users\\ejohn\\Desktop\\ElevenFiftyProjects\\PawClient\\my-app\\src\\reportWebVitals.ts":"2","C:\\Users\\ejohn\\Desktop\\ElevenFiftyProjects\\PawClient\\my-app\\src\\App.tsx":"3","C:\\Users\\ejohn\\Desktop\\ElevenFiftyProjects\\PawClient\\my-app\\src\\components\\Auth\\Navbar.tsx":"4","C:\\Users\\ejohn\\Desktop\\ElevenFiftyProjects\\PawClient\\my-app\\src\\components\\Auth\\Sign.tsx":"5","C:\\Users\\ejohn\\Desktop\\ElevenFiftyProjects\\PawClient\\my-app\\src\\components\\Auth\\Logout.tsx":"6","C:\\Users\\ejohn\\Desktop\\ElevenFiftyProjects\\PawClient\\my-app\\src\\components\\PawPost\\PostIndex.tsx":"7","C:\\Users\\ejohn\\Desktop\\ElevenFiftyProjects\\PawClient\\my-app\\src\\components\\PawPost\\PostCreate.tsx":"8","C:\\Users\\ejohn\\Desktop\\ElevenFiftyProjects\\PawClient\\my-app\\src\\components\\PawPost\\ImagePost.tsx":"9","C:\\Users\\ejohn\\Desktop\\ElevenFiftyProjects\\PawClient\\my-app\\src\\components\\PawPost\\PostEdit.tsx":"10","C:\\Users\\ejohn\\Desktop\\ElevenFiftyProjects\\PawClient\\my-app\\src\\components\\PawPost\\PostCatalog.tsx":"11","C:\\Users\\ejohn\\Desktop\\ElevenFiftyProjects\\PawClient\\my-app\\src\\components\\PawPost\\PostItems.tsx":"12","C:\\Users\\ejohn\\Desktop\\ElevenFiftyProjects\\PawClient\\my-app\\src\\components\\Comments\\ComCreate.tsx":"13","C:\\Users\\ejohn\\Desktop\\ElevenFiftyProjects\\PawClient\\my-app\\src\\components\\Comments\\CommentIndex.tsx":"14","C:\\Users\\ejohn\\Desktop\\ElevenFiftyProjects\\PawClient\\my-app\\src\\components\\Comments\\CommentHistory.tsx":"15","C:\\Users\\ejohn\\Desktop\\ElevenFiftyProjects\\PawClient\\my-app\\src\\components\\Auth\\UserProfile.tsx":"16","C:\\Users\\ejohn\\Desktop\\ElevenFiftyProjects\\PawClient\\my-app\\src\\components\\Comments\\CommentEdit.tsx":"17","C:\\Users\\ejohn\\Desktop\\ElevenFiftyProjects\\PawClient\\my-app\\src\\environment.tsx":"18","C:\\Users\\ejohn\\Desktop\\ElevenFiftyProjects\\PawClient\\my-app\\src\\components\\Auth\\News.tsx":"19"},{"size":501,"mtime":1611452516548,"results":"20","hashOfConfig":"21"},{"size":425,"mtime":499162500000,"results":"22","hashOfConfig":"21"},{"size":2481,"mtime":1627861352204,"results":"23","hashOfConfig":"21"},{"size":1961,"mtime":1627861457133,"results":"24","hashOfConfig":"21"},{"size":6748,"mtime":1615084880807,"results":"25","hashOfConfig":"21"},{"size":1263,"mtime":1612130595457,"results":"26","hashOfConfig":"21"},{"size":4791,"mtime":1627870046953,"results":"27","hashOfConfig":"21"},{"size":7219,"mtime":1627947818255,"results":"28","hashOfConfig":"21"},{"size":3642,"mtime":1627947624914,"results":"29","hashOfConfig":"21"},{"size":9144,"mtime":1627869985307,"results":"30","hashOfConfig":"21"},{"size":5179,"mtime":1627949052756,"results":"31","hashOfConfig":"21"},{"size":3102,"mtime":1627870056423,"results":"32","hashOfConfig":"21"},{"size":3783,"mtime":1627869538024,"results":"33","hashOfConfig":"21"},{"size":2916,"mtime":1627868000362,"results":"34","hashOfConfig":"21"},{"size":1930,"mtime":1627947410499,"results":"35","hashOfConfig":"21"},{"size":527,"mtime":1627768770234,"results":"36","hashOfConfig":"21"},{"size":2287,"mtime":1612111968276,"results":"37","hashOfConfig":"21"},{"size":285,"mtime":1612396803317,"results":"38","hashOfConfig":"21"},{"size":5250,"mtime":1618783061811,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"2gptof",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"42"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"42"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},"C:\\Users\\ejohn\\Desktop\\ElevenFiftyProjects\\PawClient\\my-app\\src\\index.tsx",[],["82","83"],"C:\\Users\\ejohn\\Desktop\\ElevenFiftyProjects\\PawClient\\my-app\\src\\reportWebVitals.ts",[],"C:\\Users\\ejohn\\Desktop\\ElevenFiftyProjects\\PawClient\\my-app\\src\\App.tsx",[],"C:\\Users\\ejohn\\Desktop\\ElevenFiftyProjects\\PawClient\\my-app\\src\\components\\Auth\\Navbar.tsx",[],"C:\\Users\\ejohn\\Desktop\\ElevenFiftyProjects\\PawClient\\my-app\\src\\components\\Auth\\Sign.tsx",[],"C:\\Users\\ejohn\\Desktop\\ElevenFiftyProjects\\PawClient\\my-app\\src\\components\\Auth\\Logout.tsx",[],"C:\\Users\\ejohn\\Desktop\\ElevenFiftyProjects\\PawClient\\my-app\\src\\components\\PawPost\\PostIndex.tsx",["84","85"],"import React, { Component } from \"react\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { withStyles, Theme } from \"@material-ui/core/styles\";\r\nimport { cyan } from \"@material-ui/core/colors\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport PostCreate from \"./PostCreate\";\r\nimport PostCatalog from \"./PostCatalog\";\r\nimport APIURL from \"../../environment\";\r\nimport { Divider } from \"@material-ui/core\";\r\n\r\n// Displays all posts\r\n\r\ninterface IndexProps {\r\n  updateUser: (username: string) => void;\r\n  sessionToken: any;\r\n}\r\n\r\ninterface IState {\r\n  homePosts: Array<object>;\r\n  open: boolean;\r\n  setHomePosts: (e: any) => void;\r\n  comments: Array<object>;\r\n}\r\n\r\nconst ColorButton = withStyles((theme: Theme) => ({\r\n  root: {\r\n    color: theme.palette.getContrastText(cyan[500]),\r\n    backgroundColor: cyan[500],\r\n    \"&:hover\": {\r\n      backgroundColor: cyan[700],\r\n    },\r\n  },\r\n}))(Button);\r\n\r\nclass PostIndex extends Component<IndexProps, IState> {\r\n  constructor(props: IndexProps) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      homePosts: [],\r\n      open: false,\r\n      setHomePosts: (e: any) =>\r\n        this.setState({\r\n          homePosts: e,\r\n        }),\r\n      comments: [],\r\n    };\r\n\r\n    // this.setState({homePosts: [] })\r\n    // this.setState({ Posts: false})\r\n    this.setState({ open: false });\r\n  }\r\n\r\n  // PostToggle = () => {\r\n  //     this.setState({ Posts: this.state.Posts })\r\n  // }\r\n  HomePostSet = (logdata: any) => {\r\n    this.setState({\r\n      homePosts: logdata,\r\n    });\r\n  };\r\n\r\n  // 'http://localhost:5000/pawpost/allLogs'\r\n\r\n  fetchHomePosts = () => {\r\n    fetch(`${APIURL}/pawpost/allLogs`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((res) => res.json())\r\n      .then((logdata) => {\r\n        //     this.setState({\r\n        //         homePosts: logdata\r\n        //     })\r\n        this.state.setHomePosts(logdata);\r\n        console.log(logdata);\r\n        this.fetchComments();\r\n      })\r\n      .catch((err) => console.log(err));\r\n    // console.log(this.fetchHomePosts);\r\n  };\r\n\r\n  fetchComments = () => {\r\n    fetch(`${APIURL}/comments/all`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        this.setState({ comments: data });\r\n        console.log(this.state.comments);\r\n      });\r\n  };\r\n\r\n  // Figure out componentdidmount code console should return an empty array or an array to show posts current user created\r\n  // componentDidMount do not put inside fetch function but above render function\r\n  componentDidMount = () => {\r\n    this.fetchHomePosts();\r\n  };\r\n\r\n  handleOpen = () => {\r\n    this.setState({ open: true });\r\n  };\r\n  handleClose = () => {\r\n    this.setState({ open: false });\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"PostIndex\">\r\n        <Button variant=\"outlined\" color=\"primary\" onClick={this.handleOpen}>\r\n          <p className=\"Create\">Create PawPost</p>\r\n        </Button>\r\n\r\n        <Dialog\r\n          open={this.state.open}\r\n          onClose={this.handleClose}\r\n          aria-labelledby=\"responsive-dialog-title\"\r\n        >\r\n          <Container maxWidth=\"sm\">\r\n            <PostCreate\r\n              updateUser={this.props.updateUser}\r\n              fetchHomePosts={this.fetchHomePosts}\r\n              sessionToken={this.props.sessionToken}\r\n            />\r\n            <br />\r\n            <DialogActions>\r\n              <Button onClick={this.handleClose} color=\"primary\">\r\n                Close\r\n              </Button>\r\n            </DialogActions>\r\n          </Container>\r\n        </Dialog>\r\n        <br />\r\n        <br />\r\n        <Grid container justify=\"center\">\r\n          {/* <Grid item xs={12} sm={6} md={4}> */}\r\n          <Grid container spacing={2}>\r\n            {/* <Grid item xs={12} sm={4}> */}\r\n            <Box\r\n              bgcolor=\"\"\r\n              color=\"primary.contrastText\"\r\n              p={0}\r\n              position=\"relative\"\r\n              left=\"0px\"\r\n              width=\"500px\"\r\n            >\r\n              <PostCatalog\r\n                comments={this.state.comments}\r\n                updateUser={this.props.updateUser}\r\n                fetchHomePosts={this.fetchHomePosts}\r\n                sessionToken={this.props.sessionToken}\r\n                homePosts={this.state.homePosts}\r\n              />\r\n            </Box>\r\n            {/* </Grid> */}\r\n          </Grid>\r\n        </Grid>\r\n        <div></div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PostIndex;\r\n","C:\\Users\\ejohn\\Desktop\\ElevenFiftyProjects\\PawClient\\my-app\\src\\components\\PawPost\\PostCreate.tsx",[],"C:\\Users\\ejohn\\Desktop\\ElevenFiftyProjects\\PawClient\\my-app\\src\\components\\PawPost\\ImagePost.tsx",[],"C:\\Users\\ejohn\\Desktop\\ElevenFiftyProjects\\PawClient\\my-app\\src\\components\\PawPost\\PostEdit.tsx",[],"C:\\Users\\ejohn\\Desktop\\ElevenFiftyProjects\\PawClient\\my-app\\src\\components\\PawPost\\PostCatalog.tsx",[],"C:\\Users\\ejohn\\Desktop\\ElevenFiftyProjects\\PawClient\\my-app\\src\\components\\PawPost\\PostItems.tsx",[],"C:\\Users\\ejohn\\Desktop\\ElevenFiftyProjects\\PawClient\\my-app\\src\\components\\Comments\\ComCreate.tsx",["86"],"import React, { Component } from 'react'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport { withStyles, Theme } from '@material-ui/core/styles';\r\nimport { cyan } from '@material-ui/core/colors';\r\nimport CommentEdit from './CommentEdit'\r\nimport APIURL from '../../environment'\r\n\r\n\r\n\r\n// ComCreate component located in PostItems\r\n\r\n//Pass props of ObjId=postId to get pawpost user and obj.owner to get who the post belongs to\r\n\r\ninterface CommentProps {\r\n    updateUser: (username: string) => void\r\n    fetchHomePosts: any\r\n    sessionToken: any\r\n    ObjId: string\r\n\r\n}\r\n\r\ninterface CommentState {\r\n    description: string;\r\n    owner: string;\r\n    open: boolean;\r\n\r\n\r\n}\r\n\r\nconst ColorButton = withStyles((theme: Theme) => ({\r\n    root: {\r\n        color: theme.palette.getContrastText(cyan[500]),\r\n        backgroundColor: cyan[500],\r\n        '&:hover': {\r\n            backgroundColor: cyan[700],\r\n        },\r\n    },\r\n}))(Button);\r\n\r\n\r\nclass ComCreate extends Component<CommentProps, CommentState> {\r\n    constructor(props: CommentProps) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            description: \"\",\r\n            owner: \"\", \r\n            open: false\r\n        }\r\n\r\n        this.setState({ open: false })\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n        console.log('comment posted')\r\n        this.setState({ description: \"\" })\r\n\r\n        \r\n\r\n    }\r\n\r\n\r\n    handleSubmit = (e: any) => {\r\n        e.preventDefault();\r\n        let data = {\r\n            comments: {\r\n                description: this.state.description,\r\n                owner: this.props.updateUser\r\n            }\r\n        }\r\n\r\n        // `http://localhost:5000/comments/new/${this.props.ObjId}/comment`\r\n\r\n        fetch(`${APIURL}/comments/new/${this.props.ObjId}/comment`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': this.props.sessionToken,\r\n            },\r\n            body: JSON.stringify(data)\r\n        })\r\n            .then(r => r.json())\r\n            .then(rObj => {\r\n                console.log(rObj);\r\n                this.props.fetchHomePosts();\r\n            })\r\n          \r\n    }\r\n    handleClose = () => {\r\n        this.setState({ open: false });\r\n    }\r\n   \r\n\r\n    render() {\r\n     \r\n        return (\r\n\r\n            <div>\r\n\r\n                <form className=\"commentBox\" noValidate autoComplete=\"off\">\r\n                    <TextField\r\n                        id=\"outlined-textarea\"\r\n                        label=\"Comment\"\r\n                        placeholder=\"Leave a Paw Comment\"\r\n                        multiline\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required fullWidth\r\n                        value={this.state.description}\r\n                        onChange={(e) => {\r\n                            this.setState({\r\n                                description: e.target.value\r\n                            })\r\n                            console.log(this.state.description);\r\n                        }}\r\n                        autoFocus\r\n                    />\r\n\r\n                    <div className=\"mainComment\">\r\n                        <ColorButton\r\n                            type=\"submit\"\r\n                            onClick={this.handleSubmit}\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className=\"{classes.margin}\">\r\n                            Reply\r\n                        </ColorButton>\r\n                    </div>          \r\n                    <br />\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default ComCreate","C:\\Users\\ejohn\\Desktop\\ElevenFiftyProjects\\PawClient\\my-app\\src\\components\\Comments\\CommentIndex.tsx",[],"C:\\Users\\ejohn\\Desktop\\ElevenFiftyProjects\\PawClient\\my-app\\src\\components\\Comments\\CommentHistory.tsx",[],"C:\\Users\\ejohn\\Desktop\\ElevenFiftyProjects\\PawClient\\my-app\\src\\components\\Auth\\UserProfile.tsx",[],"C:\\Users\\ejohn\\Desktop\\ElevenFiftyProjects\\PawClient\\my-app\\src\\components\\Comments\\CommentEdit.tsx",[],"C:\\Users\\ejohn\\Desktop\\ElevenFiftyProjects\\PawClient\\my-app\\src\\environment.tsx",[],"C:\\Users\\ejohn\\Desktop\\ElevenFiftyProjects\\PawClient\\my-app\\src\\components\\Auth\\News.tsx",[],["87","88"],{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","severity":1,"message":"94","line":13,"column":10,"nodeType":"95","messageId":"96","endLine":13,"endColumn":17},{"ruleId":"93","severity":1,"message":"97","line":29,"column":7,"nodeType":"95","messageId":"96","endLine":29,"endColumn":18},{"ruleId":"93","severity":1,"message":"98","line":6,"column":8,"nodeType":"95","messageId":"96","endLine":6,"endColumn":19},{"ruleId":"89","replacedBy":"99"},{"ruleId":"91","replacedBy":"100"},"no-native-reassign",["101"],"no-negated-in-lhs",["102"],"@typescript-eslint/no-unused-vars","'Divider' is defined but never used.","Identifier","unusedVar","'ColorButton' is assigned a value but never used.","'CommentEdit' is defined but never used.",["101"],["102"],"no-global-assign","no-unsafe-negation"]